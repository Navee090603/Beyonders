@model IKart_Shared.DTOs.ProductDto
@using Newtonsoft.Json
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Edit Product";
}

<div class="container mt-5">
    <div class="card shadow-sm border-0">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="mb-0 heading-title">@ViewBag.Title</h4>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-sm">
                <i class="fa fa-arrow-left me-1"></i> Back
            </a>
        </div>

        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ProductId)

                <div class="mb-3">
                    @Html.LabelFor(m => m.ProductName, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", placeholder = "Enter product name" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.ProductDetails, new { @class = "form-label fw-bold" })
                    @Html.TextAreaFor(m => m.ProductDetails, new { @class = "form-control", rows = 3, placeholder = "Enter product details" })
                </div>

                <div class="row">
                    <div class="col-md-4 mb-3">
                        @Html.Label("Category", new { @class = "form-label fw-bold" })
                        @Html.DropDownList("Category", (SelectList)ViewBag.Categories, "Select Category", new { @class = "form-select", id = "categoryDropdown" })
                    </div>
                    <div class="col-md-4 mb-3">
                        @Html.Label("SubCategory", new { @class = "form-label fw-bold" })
                        <select id="subCategoryDropdown" class="form-select">
                            <option>Select SubCategory</option>
                        </select>
                    </div>
                    <div class="col-md-4 mb-3">
                        @Html.Label("Stock", new { @class = "form-label fw-bold" })
                        <select id="stockDropdown" name="Stock_Id" class="form-select">
                            <option>Select Stock</option>
                        </select>
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Cost, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.Cost, new { @class = "form-control", type = "number", step = "0.01", placeholder = "Enter cost" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.ProductImage, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.ProductImage, new { @class = "form-control", placeholder = "Image file name or URL" })
                </div>

                <div class="d-flex justify-content-center mt-4 gap-4">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-save me-1"></i>Update</button>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary px-4"> 
                    <i class="fa fa-times me-1"></i> Cancel</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var allStocks = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Stocks));
        var currentCategory = "@Model.Category";
        var currentSubCategory = "@Model.SubCategory";
        var currentStockId = "@Model.Stock_Id";

        $('#categoryDropdown').val(currentCategory);

        function populateSubCategories() {
            var cat = $('#categoryDropdown').val();
            var subCats = allStocks.filter(s => s.Category === cat).map(s => s.SubCategory);
            subCats = [...new Set(subCats)];
            var subDropdown = $('#subCategoryDropdown');
            subDropdown.empty().append('<option>Select SubCategory</option>');
            subCats.forEach(sc => subDropdown.append('<option>' + sc + '</option>'));
            $('#subCategoryDropdown').val(currentSubCategory);
        }

        function populateStocks() {
            var cat = $('#categoryDropdown').val();
            var sub = $('#subCategoryDropdown').val();
            var stocks = allStocks.filter(s => s.Category === cat && s.SubCategory === sub);
            var stockDropdown = $('#stockDropdown');
            stockDropdown.empty().append('<option>Select Stock</option>');
            stocks.forEach(s => stockDropdown.append('<option value="' + s.StockId + '">Stock ' + s.StockId + ' - Available: ' + s.AvailableStocks + '</option>'));
            $('#stockDropdown').val(currentStockId);
        }

        $('#categoryDropdown').change(function () {
            populateSubCategories();
            $('#stockDropdown').empty().append('<option>Select Stock</option>');
        });

        $('#subCategoryDropdown').change(function () {
            populateStocks();
        });

        populateSubCategories();
        populateStocks();
    </script>
}